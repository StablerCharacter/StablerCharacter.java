/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'org.sonarqube' version '3.3'
}

sonarqube {
    properties {
        property "sonar.projectName", "StablerCharacter.java"
        property "sonar.projectKey", "StablerCharacter_StablerCharacter.java"
        property "sonar.organization", "stablercharacter"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

group("ga.susite.scfw2d")
version('1.0.0')
description("An open source Java-based 2D visual novel game engine.")

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'com.github.fastjengine:FastJ:1.6.0'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    withJavadocJar()
}

